\documentclass[a4paper,10pt]{article}
%\usepackage[utf8x]{inputenc}

% Lay out packages
\usepackage[]{geometry}
\usepackage[utf8]{inputenc}
\usepackage{mathpazo}

\usepackage{amsmath}
\usepackage{graphicx}

% Dutch style of paragraph formatting, i.e. no indents. 
\setlength{\parskip}{1.3ex plus 0.2ex minus 0.2ex}
\setlength{\parindent}{0pt}

%opening
\title{Computer Vision Assignment 2: Feature Detection}
\author{Robrecht Jurriaans (5887380), Taco Cohen (6394590)}

\begin{document}

\maketitle


\section{Harris Corner Detection}
The Harris Corner Detector is based on the earlier work by Moravec \cite{Moravec1980} which defined corners as being points with low self-similarity. The similarity is taken as the sum of squared differences to larger overlapping patches around a point. This method is quite computationally expensive as it requires separate computation for each pixel in an image.

The Harris corner detection \cite{Harris1988} algorithm builds upon this by taking the gradients within a window as seen in figure \ref{fig:harris}.

\begin{figure}[ht]
\centering
\includegraphics[width=0.7\textwidth]{img/cornermetric1}
\caption{A shifting window for a flat patch, an edge and a corner (Image taken from MathWorks)}
\label{fig:harris}
\end{figure}

If there is no edge or a corner within the window, the intensity values within the window will not change a lot. If the window contains an edge, moving the window along the edge will not result in any difference, but any movement along the perpendicular axis will result in a shift in intensity. For a corner, it does not matter which direction the window is shifted, as every window will be different.

By shifting the window in the $[u,v]$ direction we can compute the window-averaged change in intensity as follows:

\[E(u,v) = \sum_{x,y} E(x,y) [I(x+u,y+v) - I(x,y)]^2\]

where $W(x,y)$ represents the window function which can be $W(x,y)=1$ for all $x$ and $y$ within the window, or it can be a Gaussian function. $I(x+u, y+v)$ represents the shift in intensity and $I(x,y)$ represents the original intensity. For small values of $u$ and $v$ we can approximate this with a Taylor-series expansion and change the equation in:

\[E(u,v) \cong [u,v] M  \left[\begin{array}{c} u\\ v \end{array}\right] \]

where $M$ is the structure tensor matrix, or second moment matrix defined as:

\[M = \sum_{x,y} W(x,y)  \begin{bmatrix}I^2_x & I_x I_y \\ I_x I_y &  I^2_y \end{bmatrix} \]

The structure tensor matrix $M$ can be used to determine the direction of the largest change by finding the eigenvalues $\lambda_1$ and $\lambda_2$ of $M$ where $\lambda_1$ represents the direction of the fastest change\footnote{Note that we assume the eigenvalues to be ordered from largest to smallest}, whilst $\lambda_2$ represents the direction of the slowest change. As can be seen in figure \ref{fig:isoresponse}.

\begin{figure}[ht]
\centering
\includegraphics[width=0.7\textwidth]{img/isoresponse}
\caption{The iso-response surface for eigenvalues $\alpha$ and $\beta$ \cite{Harris1988}}
\label{fig:isoresponse}
\end{figure}

If both eigenvalues are low, than the change in intensity is small in all directions and thus the window is on a flat region. If one of the eigenvalues is larger than the other, the window is on an edge and when both eigenvalues are large then the change in intensity for every direction is large and the window is on a corner.

To circumvent the calculation of the eigenvalues of $M$, it is possible to represent the cornerness $R$ by the determinant and the trace of $M$ as follows:

\[R = \det M - k(\operatorname{trace} M)^2\]

where $k$ is a small constant.









\section{SIFT}
After finding corners with the Multi-scale Harris Corner Detection, SIFT descriptors are created for each of these corners. 1 


\section{Mosaic}



\section{DoG vs. Laplace}


\bibliographystyle{plain}
\bibliography{references}

\end{document}
